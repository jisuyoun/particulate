<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exem.particulate.mapper.ParticulateMapper">

	<!-- 처음 실행시키는 것인지 확인 -->
	<select id="checkTable" resultType="Int">
		SELECT COUNT(TABLE_NAME)
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_SCHEMA = 'particulate'
	</select>

	<!-- 지역 테이블 생성 -->
	<select id="createCityTable">
		CREATE TABLE TB_CITY_INFO (
			cityID INT NOT NULL AUTO_INCREMENT COMMENT '지역인덱스',
			city VARCHAR(20) NOT NULL COMMENT '지역명',
			PRIMARY KEY (cityID),
			UNIQUE INDEX city_UNIQUE (city) VISIBLE)
			COMMENT = '측정소가 있는 지역 정보'
	</select>

	<!-- 측정소 테이블 생성 -->
	<select id="createStationTable">
		CREATE TABLE TB_STATION_INFO (
		stationID INT NOT NULL AUTO_INCREMENT,
		city VARCHAR(20) NOT NULL,
		station VARCHAR(20) NOT NULL,
		PRIMARY KEY (stationID),
		UNIQUE INDEX station_UNIQUE (station) VISIBLE)
		COMMENT = '측정소 정보'
	</select>

		<!-- 농도 테이블 생성 -->
	<select id="createParticulateTable">
		CREATE TABLE TB_PARTICULATE_INFO (
		partInfoID INT NOT NULL AUTO_INCREMENT,
		city VARCHAR(20) NOT NULL COMMENT '지역명',
		station VARCHAR(20) NOT NULL COMMENT '영업소명',
		particulate INT NOT NULL COMMENT '미세먼지농도',
		fineParticulate INT NOT NULL COMMENT '초미세먼지농도',
		regDt TIMESTAMP NOT NULL COMMENT '측정일',
		PRIMARY KEY (partInfoID),
		INDEX tb_particulate_info_ibfk_1 (city) VISIBLE,
		INDEX tb_particulate_info_ibfk_2 (station) VISIBLE,
		CONSTRAINT tb_particulate_info_ibfk_1
			FOREIGN KEY (city)
			REFERENCES TB_CITY_INFO (city)
			ON DELETE CASCADE,
		CONSTRAINT tb_particulate_info_ibfk_2
			FOREIGN KEY (station)
			REFERENCES TB_STATION_INFO (station)
			ON DELETE CASCADE)
		COMMENT = '미세먼지 및 초미세먼지 농도 정보'
	</select>

		<!-- 경보 주의보 테이블 생성 -->
	<select id="createAlertTable">
		CREATE TABLE TB_ALERT_INFO (
		alertID INT NOT NULL AUTO_INCREMENT,
		city VARCHAR(20) NOT NULL COMMENT '지역명',
		station VARCHAR(20) NOT NULL COMMENT '영업소명',
		grade VARCHAR(2) NOT NULL COMMENT '주의보및경보단계',
		alertDT TIMESTAMP NOT NULL COMMENT '경보및주의보일자',
		PRIMARY KEY (alertID),
		INDEX tb_alert_info_ibfk_1 (city) VISIBLE,
		INDEX tb_alert_info_ibfk_2 (station) VISIBLE,
		CONSTRAINT tb_alert_info_ibfk_1
			FOREIGN KEY (city)
			REFERENCES TB_CITY_INFO (city)
			ON DELETE CASCADE,
		CONSTRAINT tb_alert_info_ibfk_2
			FOREIGN KEY (station)
			REFERENCES TB_STATION_INFO (station)
			ON DELETE CASCADE)
		COMMENT = '주의보 및 경보 정보'
	</select>

	<!-- 점검 일자 테이블 생성 -->
	<select id="createInspectionTable">
		CREATE TABLE TB_INSPECTION_INFO (
		inspecID INT NOT NULL AUTO_INCREMENT,
		city VARCHAR(20) NOT NULL COMMENT '지역명',
		station VARCHAR(20) NOT NULL COMMENT '영업소명',
		type VARCHAR(45) NOT NULL COMMENT '점검한측정기기구분',
		regDT TIMESTAMP NOT NULL COMMENT '점검일자',
		PRIMARY KEY (inspecID),
		INDEX tb_inspection_info_ibfk_1 (city) VISIBLE,
		INDEX tb_inspection_info_ibfk_2 (station) VISIBLE,
		CONSTRAINT tb_inspection_info_ibfk_1
			FOREIGN KEY (city)
			REFERENCES TB_CITY_INFO (city)
			ON DELETE CASCADE,
		CONSTRAINT tb_inspection_info_ibfk_2
			FOREIGN KEY (station)
			REFERENCES TB_STATION_INFO (station)
			ON DELETE CASCADE)
		COMMENT = '점검 정보'
	</select>

	<!-- cityList를 사용하여 동적으로 쿼리를 생성 -->
	<insert id="insertCityInfo" parameterType="java.util.List">
		<foreach collection="cityList" item="city" separator=";">
			INSERT INTO TB_CITY_INFO (city)
			VALUES(#{city})
		</foreach>
	</insert>

	<!-- 영업소에 대한 정보 삽입 -->
	<insert id="insertStationInfo" parameterType="java.util.List">
		INSERT INTO TB_STATION_INFO (city, station)
		VALUES(#{csvList[0]}, #{csvList[1]})
	</insert>

	<!-- 영업소별 미세먼지 농도 삽입 -->
	<insert id="insertPartInfo" parameterType="java.util.HashMap">
	    INSERT INTO TB_PARTICULATE_INFO (city, station, particulate, fineParticulate, regDt) 
		VALUES(#{csvList[0]}, #{csvList[2]}, #{csvList[4]}, #{csvList[5]}, #{csvList[1]})
	</insert>

	<!-- 영업소별 미세먼지 농도 전 체크 -->
	<select id="duplPartInfo" parameterType="java.util.HashMap" resultType="Int">
		SELECT COUNT(*)
		FROM TB_PARTICULATE_INFO
		WHERE city=#{csvList[0]}
			AND station=#{csvList[2]}
			AND regDt=#{csvList[1]}
	</select>

	<!-- 점검일 삽입 -->
	<insert id="insertInspection" parameterType="java.util.HashMap">
	    INSERT INTO TB_INSPECTION_INFO (city, station, type, regDT) 
		VALUES(#{csvList[0]}, #{csvList[2]}, #{csvList[6]}, #{csvList[1]})
	</insert>

	<!-- 미세먼지 등급 삽입 -->
	<insert id="insertAlertInfo" parameterType="java.util.HashMap">
	    INSERT INTO TB_ALERT_INFO (city, station, grade, alertDT) 
		VALUES(#{csvList[0]}, #{csvList[2]}, #{csvList[6]}, #{csvList[1]})
	</insert>

	<select id="selectPartInfoList" parameterType="String" resultType="java.util.HashMap">
		SELECT regDt, city, station, particulate, fineParticulate
		FROM TB_PARTICULATE_INFO
		WHERE regDt = #{regDt}
	</select>
</mapper>